{"version":3,"sources":["components/ToDoItem2.jsx","components/InputArea.jsx","components/App.jsx","index.js"],"names":["ToDoItem","props","onClick","check","id","item","InputArea","React","useState","setItem","onKeyPress","event","key","addItem","className","onChange","inputText","target","value","type","App","items","setItems","onCheck","console","log","prevValue","filter","element","index","prevItems","map","toDoItem","ReactDOM","render","document","getElementById"],"mappings":"gLAaeA,MARf,SAAkBC,GAEd,OAAO,wBAAIC,QAAS,WAChBD,EAAME,MAAMF,EAAMG,MAClBH,EAAMI,OCsBCC,MA7Bf,SAAmBL,GACjB,MAAwBM,IAAMC,SAAS,IAAvC,mBAAOH,EAAP,KAAaI,EAAb,KAeA,OACE,yBAAKC,WAVP,SAAwBC,GAEH,UADAA,EAAMC,MAGvBX,EAAMY,QAAQR,GACdI,EAAQ,MAKuBK,UAAU,QACzC,2BAAOC,SAfX,SAAsBJ,GACpB,IAAMK,EAAYL,EAAMM,OAAOC,MAC/BT,EAAQO,IAayBG,KAAK,OAAOD,MAAOb,IAClD,4BAAQH,QAAS,WACfD,EAAMY,QAAQR,GACdI,EAAQ,MAER,wCCmBOW,MAxCf,WAEE,MAA0Bb,IAAMC,SAAS,IAAzC,mBAAOa,EAAP,KAAcC,EAAd,KAUA,SAASC,EAAQnB,GACfoB,QAAQC,IAAIrB,GACZkB,GAAS,SAACI,GACR,OAAOA,EAAUC,QAAO,SAACC,EAASC,GAChC,OAAOA,IAAUzB,QAKvB,OACE,yBAAKU,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,kBAAC,EAAD,CACED,QAtBN,SAAqBR,GACnBiB,GAAS,SAACQ,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBzB,UAsBtB,6BACE,4BACGgB,EAAMU,KAAI,SAACC,EAAUH,GAAX,OACT,kBAAC,EAAD,CAAUjB,IAAKiB,EAAOzB,GAAIyB,EAAOxB,KAAM2B,EAAU7B,MAAOoB,WChCpEU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ec57bf90.chunk.js","sourcesContent":["//For Deletion on Item once checked\r\n\r\n\r\nimport React from \"react\";\r\n\r\nfunction ToDoItem(props)\r\n{\r\n    return <li onClick={()=>{\r\n        props.check(props.id);\r\n    }}>{props.item}</li>\r\n}\r\n\r\n\r\nexport default ToDoItem;","import React from \"react\";\r\n\r\nfunction InputArea(props) {\r\n  const [item, setItem] = React.useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    const inputText = event.target.value;\r\n    setItem(inputText);\r\n  }\r\n  function handleKeyPress(event) {\r\n    const keyPressed = event.key;\r\n    if (keyPressed === \"Enter\") \r\n    {\r\n      props.addItem(item);\r\n      setItem(\"\");\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div onKeyPress={handleKeyPress} className=\"form\">\r\n      <input onChange={handleChange} type=\"text\" value={item} />\r\n      <button onClick={()=>{\r\n        props.addItem(item);\r\n        setItem(\"\");\r\n      }}>\r\n        <span>Add</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputArea;\r\n","import React from \"react\";\nimport ToDoItem from \"./ToDoItem2\";\nimport InputArea from \"./InputArea\";\n\nfunction App() {\n  \n  const [items, setItems] = React.useState([]);\n\n  \n  function handleClick(item) {\n    setItems((prevItems) => {\n      return [...prevItems, item];\n    });\n    \n  }\n \n  function onCheck(id) {\n    console.log(id);\n    setItems((prevValue) => {\n      return prevValue.filter((element, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea \n        addItem={handleClick}\n      />\n      <div>\n        <ul>\n          {items.map((toDoItem, index) => (\n            <ToDoItem key={index} id={index} item={toDoItem} check={onCheck} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}